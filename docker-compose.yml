services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: metrics
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"

  server:
    build:
      context: .
      dockerfile: Dockerfile.server
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      ADDRESS:  "0.0.0.0:8080"
      DATABASE_DSN: "postgres://postgres:postgres@postgres:5432/metrics?sslmode=disable"
      GIN_MODE: release
    ports:
      - "8080:8080"
    command: ["/server"]

  agent1:
    build:
      context: .
      dockerfile: Dockerfile.agent
    depends_on:
      server:
        condition: service_started
    environment:
      REPORT_INTERVAL: 50
      POLL_INTERVAL: 5
      ADDRESS:  "server:8080"
    command: ["/agent"]

  agent2:
    build:
      context: .
      dockerfile: Dockerfile.agent
    depends_on:
      server:
        condition: service_started
    environment:
      REPORT_INTERVAL: 100
      POLL_INTERVAL: 10
      ADDRESS:  "server:8080"
    command: ["/agent"]

  agent3:
    build:
      context: .
      dockerfile: Dockerfile.agent
    depends_on:
      server:
        condition: service_started
    environment:
      REPORT_INTERVAL: 150
      POLL_INTERVAL: 15
      ADDRESS:  "server:8080"
    command: ["/agent"]